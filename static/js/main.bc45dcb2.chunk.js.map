{"version":3,"sources":["components/form.js","components/view.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","onSubmit","viewWeather","type","name","placeholder","View","this","data","className","sys","country","main","temp","humidity","error","Component","API_KEY","App","state","date","e","a","preventDefault","city","target","elements","value","fetch","response","json","setState","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEe,SAASA,EAAKC,GACzB,OACI,uBAAMC,SAAUD,EAAME,YAAtB,UACI,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,YAC3C,uBAAOF,KAAK,OAAOC,KAAK,UAAUC,YAAY,eAC9C,qD,ICLSC,E,4JACjB,WACI,OACI,gCACKC,KAAKP,MAAMQ,KACZ,sBAAKC,UAAU,OAAf,UACI,sBAAKA,UAAU,WAAf,UACI,gDAA4BF,KAAKP,MAAMQ,KAAKJ,KADhD,KACwDG,KAAKP,MAAMQ,KAAKE,IAAIC,WAE5E,sBAAKF,UAAU,OAAf,UACI,mDAA+BF,KAAKP,MAAMQ,KAAKI,KAAKC,QAExD,sBAAKJ,UAAU,WAAf,UACI,gDAA4BF,KAAKP,MAAMQ,KAAKI,KAAKE,eAGhD,GACT,qBAAKL,UAAU,QAAf,SACKF,KAAKP,MAAMe,e,GAlBEC,aCG5BC,EAAU,mCAUKC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNL,MAAO,I,EAGTb,Y,uCAAc,WAAOmB,GAAP,qBAAAC,EAAA,6DACZD,EAAEE,iBACIC,EAAOH,EAAEI,OAAOC,SAASF,KAAKG,MAClChB,EAAUU,EAAEI,OAAOC,SAASf,QAAQgB,MAH1B,SAIOC,MAAM,qDAAD,OAAsDJ,EAAtD,YAA8Db,EAA9D,kBAA+EM,IAJ3F,cAIVY,EAJU,gBAKGA,EAASC,OALZ,OAKVtB,EALU,OAOE,KAATgB,GAA2B,KAAZb,EAChB,EAAKoB,SAAS,CACZhB,MAAO,uBAGT,EAAKgB,SAAS,CACZvB,OACAO,MAAO,KAEbiB,QAAQC,IAAI,EAAKd,MAAMX,OAhBX,4C,kGAwBd,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,cAACV,EAAD,CAAMG,YAAaK,KAAKL,cACxB,cAAC,EAAD,CAAMM,KAAMD,KAAKY,MAAMX,KAAMO,MAAOR,KAAKY,MAAMJ,e,GAnCtBC,aCHlBkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bc45dcb2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Form(props) {\r\n    return(\r\n        <form onSubmit={props.viewWeather}>\r\n            <input type=\"text\" name=\"city\" placeholder=\"City...\" />\r\n            <input type=\"text\" name=\"country\" placeholder=\"Country...\" />\r\n            <button>View Weather</button>\r\n        </form>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class View extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.data ?             \r\n                <div className=\"view\">\r\n                    <div className=\"location\">\r\n                        <strong>Location: </strong>{this.props.data.name}, {this.props.data.sys.country}\r\n                    </div>\r\n                    <div className=\"temp\">\r\n                        <strong>Temperature: </strong>{this.props.data.main.temp}\r\n                    </div>\r\n                    <div className=\"humidity\">\r\n                        <strong>Humidity: </strong>{this.props.data.main.humidity}\r\n                    </div>\r\n                   \r\n                </div> : \"\"}\r\n                <div className=\"error\">\r\n                    {this.props.error}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Form from './components/form';\nimport View from './components/view';\n\nconst API_KEY = \"a660913c21bc4d166ca69f4d40327e68\";\nlet city, country;\n\nconst getData = async() => {\n  const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`),\n    data = response.json();\n\n  return data;\n}\n\nexport default class App extends Component {\n  state = {\n    date: {},\n    error: ''\n  }\n\n  viewWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value,\n      country = e.target.elements.country.value,\n      response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`),\n      data = await response.json();\n\n      if(city === '' || country === '') {\n        this.setState({\n          error: \"Pls enter a value\"\n        })\n      } else {\n        this.setState({\n          data,\n          error: ''\n        })\n    console.log(this.state.data)\n\n      }\n\n\n\n  }\n\n  render() {\n    return(\n      <div className=\"app\">\n        <h1>Weather App</h1>\n        <Form viewWeather={this.viewWeather} />\n        <View data={this.state.data} error={this.state.error} />\n      </div>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}